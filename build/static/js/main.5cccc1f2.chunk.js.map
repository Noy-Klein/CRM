{"version":3,"sources":["components/sub_components/dialog.js","components/sub_components/client.js","components/sub_components/client_categories.js","components/sub_components/update/loader.js","components/clients.js","components/sub_components/update/clientInput.js","components/sub_components/update/update.js","components/sub_components/update/addClient.js","components/actions.js","components/sub_components/analystics/badge.js","components/sub_components/analystics/badges.js","components/sub_components/analystics/topEmployeeChart.js","components/sub_components/analystics/salesByCountryChart.js","components/sub_components/analystics/past30dayschart.js","components/sub_components/analystics/piechart.js","components/sub_components/analystics/charts.js","components/analystics.js","components/landing.js","App.js","serviceWorker.js","index.js"],"names":["Dialog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","newName","newCountry","clientToChange","clients","find","c","_id","id","name","split","lastName","country","state","nameText","surText","countryText","dialogUpdate","close","deleteClient","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","delete","stop","change","e","target","value","setState","defineProperty","react_default","createElement","className","type","onChange","placeholder","surname","onClick","Component","Client","fixDate","time","first_contact","year","month","openModal","visible","closeModal","sold","email","date","key","alt","src","height","width","owner","dialog","Client_Categories","Loader","FontAwesome","require","Clients","componentWillMount","data","Axios","get","sent","_ref2","_callee2","prop","index","demoClients","_context2","indexOf","toConsumableArray","url","method","client","_x","_x2","_x3","apply","arguments","clientToDelete","splice","confirm","window","console","log","params","then","updateSearch","searchBar","text","cat","matches","toLowerCase","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","includes","push","err","return","courrentPage","length","searchText","selected","_this2","slice","style","marginRight","display","textAlign","marginLeft","client_categories","map","sub_components_client","open","firstContact","emailType","update_loader","ClientInput","list","currentClient","Update","sell","alert","update","chosenEmail","chosenOwner","transfer","send","onlyOwners","ownerNames","d","filter","v","i","onlyOwnerNames","clientInput","o","AddClient","adding","addClient","newLastName","newOwner","newEmail","newType","Actions","firstName","newClient","uuid","today","inc","Date","toISOString","Badge","icon","sum","Badges","generateNewClients","todaysMonth","getMonth","todaysYear","getFullYear","parseInt","generateEmailsSent","generateOutstanding","generateHottestCountry","maxSum","countries","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","countryType","cou","_iterator3","badge","badges_FontAwesome","size","backgroundColor","borderRadius","padding","color","TopEmployee","top","ResponsiveContainer","BarChart","barCategoryGap","layout","CartesianGrid","strokeDasharray","XAxis","YAxis","dataKey","Tooltip","Legend","Bar","fill","SalesBy","select","changeSelect","countrySales","Last30","todaysDay","getDate","monthNames","LineChart","margin","right","left","bottom","Line","stroke","PieChart","Pie","nameKey","cx","cy","label","Charts","generateClientJoined","lastMonthCounter","generateCountrySales","months","sales","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","findCountrySales","_i","cs","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","cl","generateTopEmployee","topEmployees","top3","employees","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","findMax","sort","b","topEmployeeChart","salesByCountryChart","past30dayschart","piechart","Analystics","badges","charts","Landing","App","BrowserRouter","Link","to","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cccc1f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Dialog extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameText: '',\r\n            surText: '',\r\n            countryText: '',\r\n            name: props.name,\r\n            country: props.country\r\n        }\r\n    }\r\n\r\n    click = () => {\r\n        let clientToChange = this.props.clients.find(c =>\r\n            c._id === this.props.id\r\n        );\r\n        let name = clientToChange.name.split(' ')[0];\r\n        let lastName = clientToChange.name.split(' ')[1];\r\n        let country = clientToChange.country;\r\n        let newName;\r\n        let newCountry;\r\n        if (this.state.nameText !== '') {\r\n            if (this.state.surText !== '') {\r\n                newName = this.state.nameText + ' ' + this.state.surText;\r\n            }\r\n            else {\r\n                newName = this.state.nameText + ' ' + lastName;\r\n            }\r\n        }\r\n        else {\r\n            if (this.state.surText !== '') {\r\n                newName = name + ' ' + this.state.surText;\r\n            }\r\n            else {\r\n                newName = name + ' ' + lastName;\r\n            }\r\n        }\r\n        if (this.state.countryText !== '') {\r\n            newCountry = this.state.countryText;\r\n        }\r\n        else {\r\n            newCountry = country;\r\n        }\r\n        this.props.dialogUpdate('country', newCountry, this.props.id);\r\n        this.props.dialogUpdate('name', newName, this.props.id);\r\n        this.props.close();\r\n    }\r\n\r\n    close = () => {\r\n        this.props.close();\r\n    }\r\n\r\n    deleteClient = async () => {\r\n        this.props.delete(this.props.id);\r\n        this.close();\r\n    }\r\n\r\n    change = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='dialog'>\r\n                <div className='changes'>\r\n                    <div className='addInput'>Name : </div>\r\n                    <div className='addInput'>Surname : </div>\r\n                    <div className='addInput'>Country : </div>\r\n                </div>\r\n                <div className='changes'>\r\n                    <input className='Input' type='text' name='nameText' value={this.state.nameText} onChange={this.change} placeholder={this.props.name} /><br />\r\n                    <input className='Input' type='text' name='surText' value={this.state.surText} onChange={this.change} placeholder={this.props.surname} /><br />\r\n                    <input className='Input' type='text' name='countryText' value={this.state.countryText} onChange={this.change} placeholder={this.props.country} /><br />\r\n                </div>\r\n                <div className='changeBtns'>\r\n                    <button className='dialogbtn updateB' type='button' onClick={this.click}>Update</button>\r\n                    <button className='dialogbtn' type='button' onClick={this.deleteClient}>DELETE</button>\r\n                    <button className='dialogbtn closeB' type='button' onClick={this.close}>Close</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialog;","import React, { Component } from 'react';\r\nimport Dialog from './dialog';\r\n// import Modal from 'react-awesome-modal';\r\n\r\nclass Client extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    fixDate = () => {\r\n        let time = this.props.first_contact;\r\n        time = time.split('-');\r\n        let year = time[0];\r\n        let month = time[1];\r\n        let day = time[2][0] + '' + time[2][1];\r\n        return (day + '/' + month + '/' + year);\r\n    }\r\n\r\n    openModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let sold;\r\n        let email;\r\n        let date = this.fixDate();\r\n        // let date = this.props.first_contact;\r\n        if (this.props.sold) {\r\n            sold = 'http://www.clker.com/cliparts/b/l/n/Q/E/5/check-mark-13x13-hi.png';\r\n        }\r\n        else {\r\n            sold = null;\r\n        }\r\n        if (this.props.email === null) {\r\n            email = '-'\r\n        }\r\n        else {\r\n            email = this.props.email;\r\n        }\r\n        return (\r\n            <div>\r\n                <div onClick={this.openModal} key={this.props.id} >\r\n                    <div className='name'>{this.props.name}</div>\r\n                    <div className='surname'>{this.props.surname}</div>\r\n                    <div className='country'>{this.props.country}</div>\r\n                    <div className='firstcontact'>{date}</div>\r\n                    <div className='email'>{email}</div>\r\n                    <div className='sold'>{sold !== null ? <img alt='check' src={sold} height='20' width='20' /> : '-'}</div>\r\n                    <div className='owner'>{this.props.owner}</div>\r\n                </div>\r\n                <hr />\r\n                {this.state.visible ? \r\n                     <Dialog delete={this.props.delete} dialogUpdate={this.props.dialogUpdate} clients={this.props.clients} close={this.closeModal} id={this.props.id} name={this.props.name} surname={this.props.surname} country={this.props.country} />\r\n                     : null}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Client;","import React, { Component } from 'react';\r\n\r\nclass Client_Categories extends Component {\r\n    render() {\r\n        return (\r\n            <div className='categories'>\r\n                <div className='name'>Name</div>\r\n                <div className='surname'>Surname</div>\r\n                <div className='country'>Country</div>\r\n                <div className='firstcontact'>First Contact</div>\r\n                <div className='email'>Email</div>\r\n                <div className='sold'>Sold</div>\r\n                <div className='owner'>Owner</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Client_Categories;","import React, { Component } from 'react';\r\nimport './loader.css';\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"sk-circle\">\r\n                <div className=\"sk-circle1 sk-child\"></div>\r\n                <div className=\"sk-circle2 sk-child\"></div>\r\n                <div className=\"sk-circle3 sk-child\"></div>\r\n                <div className=\"sk-circle4 sk-child\"></div>\r\n                <div className=\"sk-circle5 sk-child\"></div>\r\n                <div className=\"sk-circle6 sk-child\"></div>\r\n                <div className=\"sk-circle7 sk-child\"></div>\r\n                <div className=\"sk-circle8 sk-child\"></div>\r\n                <div className=\"sk-circle9 sk-child\"></div>\r\n                <div className=\"sk-circle10 sk-child\"></div>\r\n                <div className=\"sk-circle11 sk-child\"></div>\r\n                <div className=\"sk-circle12 sk-child\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport Client from './sub_components/client';\r\nimport ClientCategories from './sub_components/client_categories';\r\nimport Axios from 'axios';\r\nimport Loader from './sub_components/update/loader';\r\nconst FontAwesome = require('react-fontawesome');\r\n\r\nclass Clients extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            searchText: '',\r\n            selected: 'name',\r\n            courrentPage: 0\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        let data = await Axios.get('/clients');\r\n        this.setState({ clients: data.data });\r\n    }\r\n\r\n    dialogUpdate = async (prop, value, id) => {\r\n        let clientToChange = this.state.clients.find(c =>\r\n            c._id === id);\r\n        let index = this.state.clients.indexOf(clientToChange);\r\n        let demoClients = [...this.state.clients]\r\n        demoClients[index][prop] = value;\r\n        Axios({\r\n            url: '/clients/' + id,\r\n            method: 'put',\r\n            data: {\r\n                client: demoClients[index]\r\n            }\r\n        })\r\n        this.setState({ clients: demoClients });\r\n    }\r\n\r\n    delete = (id) => {\r\n        let clientToDelete = this.state.clients.find(c =>\r\n            c._id === id\r\n        );\r\n        let index = this.state.clients.indexOf(clientToDelete);\r\n        let demoClients = [...this.state.clients];\r\n        demoClients.splice(index, 1);\r\n        let confirm = window.confirm('Are You Sure You Want To Delete ' + clientToDelete.name + ' ?');\r\n        console.log(confirm)\r\n        if (confirm === true) {\r\n            Axios({\r\n                url: '/clients/' + clientToDelete._id,\r\n                method: 'delete',\r\n                params: {\r\n                    client: clientToDelete\r\n                }\r\n            }).then((data) => {\r\n                console.log(data, 'deleted');\r\n            });\r\n            this.setState({ clients: demoClients })\r\n        }\r\n    }\r\n\r\n    updateSearch = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    searchBar = (text, cat, clients) => { // works!!\r\n        let matches = [];\r\n        text = text.toLowerCase();\r\n        cat = cat.toLowerCase();\r\n        let name;\r\n        for (let c of clients) {\r\n            name = c[cat].toLowerCase();\r\n            // name = c.emailType.toLowerCase();\r\n            if (name.includes(text)) {\r\n                matches.push(c);\r\n            }\r\n        }\r\n        return matches;\r\n    }\r\n\r\n    next = () => {\r\n        if (this.state.courrentPage > this.state.clients.length - 20) {\r\n            return;\r\n        }\r\n        this.setState({ courrentPage: this.state.courrentPage + 20 })\r\n    }\r\n\r\n    prev = () => {\r\n        if (this.state.courrentPage === 0) {\r\n            return;\r\n        }\r\n        this.setState({ courrentPage: this.state.courrentPage - 20 })\r\n    }\r\n\r\n    render() {\r\n        let clients = this.state.clients.slice(this.state.courrentPage, this.state.courrentPage + 20);\r\n        let matches = this.searchBar(this.state.searchText, this.state.selected, clients);\r\n        if (matches.length > 0) {\r\n            clients = matches;\r\n        }\r\n        return (\r\n            <div>\r\n            {this.state.clients.length > 0 ? \r\n            <div className='container'>\r\n                <div>\r\n                    <input type='text' value={this.state.searchText} name='searchText' className='searchText' placeholder='search' onChange={this.updateSearch} />\r\n                    <select className='options' onChange={this.updateSearch} name='selected' value={this.state.selected} >\r\n                        <option>Name</option>\r\n                        <option>Country</option>\r\n                        <option>Owner</option>\r\n                        <option>Email</option>\r\n                    </select>\r\n                    <div className='arrows'>\r\n                        <span style={{ marginRight: '10px' }}><FontAwesome className='fas fa-arrow-left' name='arrow-left' onClick={this.prev} style={{ height: '5px', width: '5px' }} /></span>\r\n                        <div style={{ display: 'inline-block', textAlign: 'center' }}>{this.state.courrentPage} - {this.state.courrentPage + 20}</div>\r\n                        <span style={{ marginLeft: '8px' }}><FontAwesome className='fas fa-arrow-right' name='arrow-right' onClick={this.next} style={{ height: '5px', width: '5px' }} /></span>\r\n                    </div>\r\n                </div>\r\n                <ClientCategories />\r\n                {matches.length === 0 ?\r\n                    <div>NO MATCHES</div> :\r\n                    clients.map(c => {\r\n                        return <Client delete={this.delete} dialogUpdate={this.dialogUpdate} clients={this.state.clients} open={this.openModal} id={c._id} key={c._id} name={c.name.split(' ')[0]} surname={c.name.split(' ')[1]} country={c.country} first_contact={c.firstContact} email={c.emailType} sold={c.sold} owner={c.owner} />\r\n                    })}\r\n            </div>\r\n            :\r\n        <Loader />\r\n        }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clients;","import React, { Component } from 'react';\r\n\r\nclass ClientInput extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                Client : <input list='clients' className='Input' placeholder='Client Name' value={this.props.currentClient} name='currentClient' onChange={this.props.change} />\r\n                <datalist id=\"clients\">\r\n                    {this.props.clients.map(c => {\r\n                        return <option key={c._id}>{c.name}</option>\r\n                    })}\r\n                </datalist>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientInput;","import React, { Component } from 'react';\r\nimport ClientInput from './clientInput';\r\n// import Loader from './loader';\r\n// import Axios from 'axios';\r\n\r\nclass Update extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentClient: '',\r\n            chosenOwner: '',\r\n            chosenEmail: ''\r\n        }\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    sell = () => {\r\n        if (this.state.currentClient === '') {\r\n            alert('YOU HAVE NOT CHOSEN A CLIENT');\r\n        }\r\n        else {\r\n            let client = this.props.clients.find(c => c.name === this.state.currentClient);\r\n            this.props.update(true, 'sold', client._id);\r\n            console.log(client);\r\n            alert(client.name + ' Has Been Sold!')\r\n            this.setState({chosenEmail: '', chosenOwner: '', currentClient: ''})\r\n        }\r\n    }\r\n\r\n    transfer = () => {\r\n        if (this.state.currentClient === '') {\r\n            alert('YOU HAVE NOT CHOSEN A CLIENT');\r\n        }\r\n        else if (this.state.chosenOwner === '' || this.state.chosenOwner === 'Select Owner') {\r\n            alert('YOU HAVE NOT CHOSEN AN OWNER');\r\n        }\r\n        else {\r\n            let client = this.props.clients.find(c => c.name === this.state.currentClient);\r\n            this.props.update(this.state.chosenOwner, 'owner', client._id);\r\n            console.log(client);\r\n            alert(client.name + ' Has Been Transfered To ' + client.owner)\r\n            this.setState({chosenEmail: '', chosenOwner: '', currentClient: ''})\r\n        }\r\n    }\r\n\r\n    send = () => {\r\n        if (this.state.currentClient === '') {\r\n            alert('YOU HAVE NOT CHOSEN A CLIENT');\r\n        }\r\n        else if (this.state.chosenEmail === '' || this.state.chosenEmail === 'Email Type') {\r\n            alert('YOU HAVE NOT CHOSEN AN EMAIL TYPE');\r\n        }\r\n        else {\r\n            let client = this.props.clients.find(c => c.name === this.state.currentClient);\r\n            this.props.update(this.state.chosenEmail, 'emailType', client._id);\r\n            console.log(client);\r\n            alert(client.name + ' Has Been Declared!')\r\n            this.setState({chosenEmail: '', chosenOwner: '', currentClient: ''})\r\n        }\r\n    }\r\n\r\n    onlyOwners = () => {\r\n        let ownerNames = [];\r\n        for (let d of this.props.clients) {\r\n            ownerNames.push(d.owner);\r\n        }\r\n        ownerNames = ownerNames.filter((v, i) => ownerNames.indexOf(v) === i);\r\n        return ownerNames;\r\n    }\r\n\r\n    render() {\r\n        let onlyOwnerNames = this.onlyOwners();\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h3>Update</h3>\r\n                    <ClientInput change={this.change} currentClient={this.state.currentClient} clients={this.props.clients} />\r\n                    <div className='changes'>\r\n                        <div className='addInput'>Transfer Ownership To :</div>\r\n                        <div className='addInput'>Send Email :</div>\r\n                        <div className='addInput'>Declare Sale!</div>\r\n                    </div>\r\n                    <div className='changes'>\r\n                        <select className='select Input' value={this.state.chosenOwner} name='chosenOwner' onChange={this.change} >\r\n                            <option key='0'>Select Owner</option>\r\n                            {onlyOwnerNames.map(o => {\r\n                                return <option key={o}>{o}</option>\r\n                            })}\r\n                        </select>\r\n                        <select className='select Input' value={this.state.chosenEmail} name='chosenEmail' onChange={this.change} >\r\n                            <option>Email Type</option>\r\n                            <option key='a'>A</option>\r\n                            <option key='b'>B</option>\r\n                            <option key='c'>C</option>\r\n                            <option key='d'>D</option>\r\n                        </select>\r\n                        <select className='none'>\r\n                        </select>\r\n                    </div>\r\n                    <div className='changes'>\r\n                        <div className='updateBtn' onClick={this.transfer}>Transfer</div>\r\n                        <div className='updateBtn' onClick={this.send}>Send</div>\r\n                        <div className='updateBtn' onClick={this.sell}>Declare</div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Update;","import React, { Component } from 'react';\r\n\r\nclass AddClient extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            newName: '',\r\n            newLastName: '',\r\n            newCountry: '',\r\n            newOwner: '',\r\n            newEmail: '',\r\n            newType: ''\r\n        }\r\n    }\r\n\r\n    onlyOwners = () => {\r\n        let ownerNames = [];\r\n        for (let d of this.props.clients) {\r\n            ownerNames.push(d.owner);\r\n        }\r\n        ownerNames = ownerNames.filter((v, i) => ownerNames.indexOf(v) === i);\r\n        return ownerNames;\r\n    }\r\n\r\n    change = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    adding = () => {\r\n        this.props.addClient(this.state.newName, this.state.newLastName, this.state.newCountry, this.state.newOwner, this.state.newEmail, this.state.newType);\r\n        alert(this.state.newName + ' ' + this.state.newLastName + ' Was Added To The List!')\r\n        this.setState({newName:'', newLastName:'', newCountry:'', newOwner:'', newEmail:'', newType:'' })\r\n    }\r\n\r\n    render() {\r\n        let onlyOwnerNames = this.onlyOwners();\r\n        return (\r\n            <div>\r\n                <h3>Add Client</h3>\r\n                <div className='changes'>\r\n                    <div className='addInput'>First Name:</div> \r\n                    <div className='addInput'>Last Name: </div>\r\n                    <div className='addInput'>Country: </div>\r\n                    <div className='addInput'>Owner:</div>    \r\n                    <div className='addInput'>Email: </div>        \r\n                    <div className='addInput'>Email Type: </div>    \r\n                </div>\r\n                <div className='changes'>\r\n                    <input className='Input' type='text' name='newName' value={this.state.newName} onChange={this.change} placeholder='First Name' /><br />\r\n                    <input className='Input' type='text' name='newLastName' value={this.state.newLastName} onChange={this.change} placeholder='Last Name' /><br />\r\n                    <input className='Input' type='text' name='newCountry' value={this.state.newCountry} onChange={this.change} placeholder='Country' /><br />\r\n                    <select className='Input selectOfAdd' name='newOwner' value={this.state.newOwner} onChange={this.change}>\r\n                        <option key='0'>Select Owner</option>\r\n                        {onlyOwnerNames.map(o=>{\r\n                            return <option key={o}>{o}</option>\r\n                        })}\r\n                    </select>\r\n                    <input className='Input' type='text' name='newEmail' value={this.state.newEmail} onChange={this.change} placeholder='Email' /><br />\r\n                    <select className='Input selectOfAdd' type='text' name='newType' value={this.state.newType} onChange={this.change}>\r\n                        <option key='first1'>Select Email Type</option>\r\n                        <option key='a'>A</option>\r\n                        <option key='b'>B</option>\r\n                        <option key='c'>C</option>\r\n                        <option key='d'>D</option>\r\n                    </select>\r\n                </div>\r\n                <div className='btn'>\r\n                    <button className='AddBtn' type='button' onClick={this.adding}>Add New Client</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddClient;","import React, { Component } from 'react';\r\nimport Update from './sub_components/update/update';\r\nimport AddClient from './sub_components/update/addClient';\r\nimport Axios from 'axios';\r\nimport uuid from 'uuid';\r\n\r\nclass Actions extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            today: new Date().toISOString()\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        let data = await Axios.get('/actions');\r\n        this.setState({ clients: data.data });\r\n    }\r\n\r\n    update = async (value, prop, id) => {\r\n        let demoClients = [...this.state.clients]\r\n        let client = demoClients.find(c => c._id === id);\r\n        let index = demoClients.indexOf(client);\r\n        demoClients[index][prop] = value;\r\n        Axios({\r\n            url: '/clients/' + id,\r\n            method: 'put',\r\n            data: {\r\n                client: demoClients[index]\r\n            }\r\n        })\r\n        this.setState({ clients: demoClients });\r\n    }\r\n\r\n    addClient = (firstName, lastName, country, owner, email, type) => {\r\n        let newClient = {\r\n            _id: uuid(),\r\n            name: firstName + ' ' + lastName,\r\n            email: email,\r\n            firstContact: this.state.today,\r\n            emailType: type,\r\n            sold: false,\r\n            owner: owner,\r\n            country: country\r\n        }\r\n        console.log(this.state.id)\r\n        let demoClients = [...this.state.clients];\r\n        demoClients.push(newClient);\r\n        Axios({\r\n            url: '/addClient',\r\n            method: 'post',\r\n            data: {\r\n                client: newClient\r\n            }\r\n        }).then(this.inc())\r\n        this.setState({ clients: demoClients });\r\n    }\r\n\r\n    inc = () =>{\r\n        this.setState({id: this.state.id + 1});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='page'>\r\n                <Update update={this.update} clients={this.state.clients} />\r\n                <AddClient clients={this.state.clients} addClient={this.addClient} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Actions;","import React, { Component } from 'react';\r\n\r\nclass Badge extends Component {\r\n    render() {\r\n        return (\r\n            <span>\r\n                <div className='order iconCircle'>{this.props.icon}</div>\r\n                <div className='order info'>\r\n                    <span className='sum'>{this.props.sum}</span><br />\r\n                    <span className='text'>{this.props.text}</span>\r\n                </div>\r\n            </span>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badge;","import React, { Component } from 'react';\r\nimport Badge from './badge';\r\nimport Axios from 'axios';\r\nimport Loader from '../update/loader';\r\nconst FontAwesome = require('react-fontawesome');\r\n\r\nclass Badges extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: []\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        let data = await Axios.get('/clients');\r\n        this.setState({ clients: data.data });\r\n    }\r\n\r\n    generateNewClients = () => {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let sum = 0;\r\n        let todaysMonth = new Date().getMonth() + 1;\r\n        let todaysYear = new Date().getFullYear();\r\n        for (let c of this.state.clients) {\r\n            let time = c.firstContact;\r\n            time = time.split('-');\r\n            let year = parseInt(time[0]);\r\n            let month = parseInt(time[1]);\r\n            if (todaysMonth === month && todaysYear === year) {\r\n                sum = sum + 1;\r\n            }\r\n        }\r\n        return { sum: sum, month: monthNames[todaysMonth - 1] };\r\n    }\r\n\r\n    generateEmailsSent = () => {\r\n        let sum = this.state.clients.filter(c => c.emailType !== null);\r\n        sum = sum.length;\r\n        return sum;\r\n    }\r\n\r\n    generateOutstanding = () => {\r\n        let sum = this.state.clients.filter(c => c.sold === false);\r\n        sum = sum.length;\r\n        return sum;\r\n    }\r\n\r\n    generateHottestCountry = () => {\r\n        let sum = 0;\r\n        let maxSum = 0;\r\n        let country;\r\n        let countries = [];\r\n        for (let d of this.state.clients) {\r\n            countries.push(d.country);\r\n        }\r\n        countries = countries.filter((v, i) => countries.indexOf(v) === i);\r\n        for (let countryType of countries) {\r\n            this.state.clients.filter((c) => { return c.country === countryType }).map((cou) => {\r\n                if (cou.sold) {\r\n                    sum = sum + 1;\r\n                }\r\n            });\r\n            if (sum > maxSum) {\r\n                maxSum = sum;\r\n                country = countryType;\r\n            }\r\n            sum = 0;\r\n        }\r\n        return country;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.clients.length > 0 ?\r\n                    <div className='badgeContainer'>\r\n                        <div className='badge'><Badge text={'New ' + this.generateNewClients().month + ' Members'} sum={this.generateNewClients().sum} icon={<FontAwesome className='fas fa-chart-line' name='chart-line' size='4x' style={{ backgroundColor: '#00e673', borderRadius: '50%', padding: '15px', color: 'white' }} />} /></div>\r\n                        <div className='badge'><Badge text='Emails Sent' sum={this.generateEmailsSent()} icon={<FontAwesome className='fas fa-envelope' name='envelope' size='4x' style={{ backgroundColor: '#4d79ff', borderRadius: '50%', padding: '15px', color: 'white' }} />} /></div>\r\n                        <div className='badge'><Badge text='Outstanding Clients' sum={this.generateOutstanding()} icon={<FontAwesome className='fas fa-user-circle' name='user-circle' size='4x' style={{ backgroundColor: '#ff4d4d', borderRadius: '50%', padding: '15px', color: 'white' }} />} /></div>\r\n                        <div className='badge'><Badge text='Hottest Country' sum={this.generateHottestCountry()} icon={<FontAwesome className='fas fa-globe-americas' name='globe-americas' size='4x' style={{ backgroundColor: '#ffd11a', borderRadius: '50%', padding: '15px', color: 'white' }} />} /></div>\r\n                    </div>\r\n                    :\r\n                    <Loader />\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","import React, { Component } from 'react';\r\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from 'recharts';\r\n// import { eventNames } from 'cluster';\r\n\r\nclass TopEmployee extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: props.top\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chart1'>\r\n            <span className='header'>Top Employees</span>\r\n                <ResponsiveContainer width='100%' >\r\n                    <BarChart barCategoryGap='32%' layout=\"vertical\" width={250} height={250} data={this.props.top}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type='number' />\r\n                        <YAxis type='category' dataKey=\"name\" />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey='sales' width={5} fill=\"darkblue\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopEmployee;","import React, { Component } from 'react';\r\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar } from 'recharts';\r\n\r\nclass SalesBy extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            select: ''\r\n        }\r\n    }\r\n\r\n    change = (e) =>{\r\n        this.setState({select: e.target.value}, ()=>{\r\n            this.props.changeSelect(this.state.select)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.select)\r\n        return (\r\n            <div className='chart2'>\r\n            <span className='header'>Sales By - \r\n                <select className='Input' value={this.state.select} onChange={this.change}>\r\n                    <option key='country'>country</option>\r\n                    <option key='owner'>owner</option>\r\n                    <option key='emailType'>emailType</option>\r\n                    <option key='Month'>month</option>\r\n                </select>\r\n            </span>\r\n                <ResponsiveContainer width='100%' >\r\n                    <BarChart width={250} height={250} data={this.props.countrySales}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type='category' dataKey='country' />\r\n                        <YAxis type='number'/>\r\n                        <Tooltip />\r\n                        <Bar dataKey=\"sales\" fill=\"#8080ff\" />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SalesBy;","import React, { Component } from 'react';\r\nimport { ResponsiveContainer, LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line } from 'recharts';\r\n\r\nclass Last30 extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            data: [{name: 'a', value:30}, {name: 'b', value: 40}],\r\n            todaysMonth: new Date().getMonth(),\r\n            todaysDay: new Date().getDate(),\r\n            monthNames : [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chart3'>\r\n                <span className='header'>Sales Since {this.state.monthNames[this.state.todaysMonth -1]} {this.state.todaysDay}</span>\r\n                <ResponsiveContainer width='100%' >\r\n                    <LineChart width={730} height={250} data={this.state.data}\r\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Last30;","import React, { Component } from 'react';\r\nimport { ResponsiveContainer, PieChart, Pie } from 'recharts';\r\n\r\nclass TopEmployee extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            data: [{name: 'a', value:30}, {name: 'b', value: 40}]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='chart4'>\r\n                <span className='header'>Client Acquisition</span>\r\n                <ResponsiveContainer width='100%' >\r\n                    <PieChart width={730} height={250}>\r\n                        <Pie data={this.state.data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" fill=\"#82ca9d\" label />\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopEmployee;","import React, { Component } from 'react';\r\nimport TopEmployee from './topEmployeeChart';\r\nimport SalesByCountry from './salesByCountryChart';\r\nimport Last30 from './past30dayschart';\r\nimport PieChart from './piechart';\r\nimport Axios from 'axios';\r\nimport Loader from '../update/loader';\r\n\r\nclass Charts extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            clients: [],\r\n            select: 'country',\r\n            todaysMonth: new Date().getMonth(),\r\n            todaysDay: new Date().getDate(),\r\n            todaysYear: new Date().getFullYear()\r\n        }\r\n    }\r\n\r\n    componentWillMount = async () => {\r\n        let data = await Axios.get('/clients');\r\n        this.setState({ clients: data.data });\r\n    }\r\n\r\n    changeSelect = (value) => {\r\n        this.setState({ select: value })\r\n    }\r\n\r\n    generateClientJoined = () => {\r\n        let lastMonthCounter = 0;\r\n        // let counter6to12 = 0;\r\n        // let yearandmoreCouner = 0;\r\n        // let firstContacts = [];\r\n        for (let c of this.state.clients) {\r\n            let time = c.firstContact;\r\n            time = time.split('-');\r\n            let year = parseInt(time[0]);\r\n            let month = parseInt(time[1]);\r\n            if (year === this.state.todaysYear && month === this.state.todaysMonth + 1) { //i think is fine\r\n                lastMonthCounter = lastMonthCounter + 1;\r\n            }\r\n\r\n        }\r\n        console.log(lastMonthCounter);\r\n        // console.log(counter6to12);\r\n    }\r\n\r\n    generateCountrySales = () => {\r\n        if (this.state.select === 'month') {\r\n            let sum = 0;\r\n            let date;\r\n            let months = [{ country: 'Jan', sales: null }, { country: 'Feb', sales: null }, { country: 'Mar', sales: null }, { country: 'Apr', sales: null },\r\n            { country: 'May', sales: null }, { country: 'Jun', sales: null }, { country: 'Jul', sales: null }, { country: 'Aug', sales: null },\r\n            { country: 'Sep', sales: null }, { country: 'Oct', sales: null }, { country: 'Nov', sales: null }, { country: 'Dec', sales: null }]\r\n            for (let i = 0; i < 12; i++) {\r\n                for (let c of this.state.clients) {\r\n                    if (c.firstContact.split('-')[1].split('')[0] === '0') {\r\n                        date = parseInt(c.firstContact.split('-')[1].split('')[1]);\r\n                    }\r\n                    else {\r\n                        date = parseInt(c.firstContact.split('-')[1])\r\n                    }\r\n                    if (date === i + 1) {\r\n                        sum = sum + 1;\r\n                    }\r\n                }\r\n                months[i].sales = sum;\r\n                sum = 0;\r\n            }\r\n            return months;\r\n        }\r\n        else {\r\n            let countries = [];\r\n            let countrySales = [];\r\n            for (let d of this.state.clients) {\r\n                countries.push(d[this.state.select]);\r\n            }\r\n            countries = countries.filter((v, i) => countries.indexOf(v) === i);\r\n            for (let c of countries) {\r\n                countrySales.push(this.findCountrySales(c));\r\n            }\r\n            for (let cs of countrySales) {\r\n                if (cs.country === 'no') {\r\n                    let index = countrySales.indexOf(cs);\r\n                    countrySales.splice(index, 1)\r\n                }\r\n            }\r\n            return countrySales;\r\n        }\r\n\r\n    }\r\n\r\n    findCountrySales = (c) => {\r\n        let select = this.state.select;\r\n        let sales = 0;\r\n        for (let cl of this.state.clients) {\r\n            if (cl[select] === c && cl.sold) {\r\n                sales = sales + 1;\r\n            }\r\n        }\r\n        let country = c;\r\n        if (c === null) {\r\n            c = 'no'\r\n        }\r\n        console.log(c)\r\n        country = c.split(' ')[0];\r\n        return { country, sales }\r\n    }\r\n\r\n    generateTopEmployee = () => {\r\n        let topEmployees = [];\r\n        let top3 = [];\r\n        let employees = [];\r\n        for (let d of this.state.clients) {\r\n            employees.push(d.owner);\r\n        }\r\n        employees = employees.filter((v, i) => employees.indexOf(v) === i);\r\n        for (let e of employees) {\r\n            topEmployees.push(this.findMax(e));\r\n        }\r\n        topEmployees.sort(function (a, b) {\r\n            a = a.sales;\r\n            b = b.sales;\r\n            if (a > b) {\r\n                return -1;\r\n            }\r\n            if (a < b) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n        for (let i = 0; i < 3; i++) {\r\n            top3.push(topEmployees[i]);\r\n        }\r\n        return top3;\r\n    }\r\n\r\n    findMax = (e) => {\r\n        let sales = 0;\r\n        this.state.clients.map(c => {\r\n            if (c.owner === e && c.sold) {\r\n                sales = sales + 1;\r\n            }\r\n        })\r\n        let name = e.split(' ')[0]\r\n        return { name, sales }\r\n    }\r\n\r\n    render() {\r\n        this.generateClientJoined();\r\n        let countrySales = this.generateCountrySales();\r\n        let top = this.generateTopEmployee();\r\n        return (\r\n            <div>\r\n                {this.state.clients.length > 0 ?\r\n                    <div>\r\n                        <TopEmployee top={top} />\r\n                        <SalesByCountry changeSelect={this.changeSelect} countrySales={countrySales} />\r\n                        <Last30 />\r\n                        <PieChart /></div>\r\n                    :\r\n                    <Loader />\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\r\nimport Badges from './sub_components/analystics/badges';\r\nimport Charts from './sub_components/analystics/charts';\r\n\r\nclass Analystics extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Badges />\r\n                <Charts />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Analystics;","import React, { Component } from 'react';\r\n\r\nclass Landing extends Component{\r\n    render(){\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1 style={{color: 'pink'}}>WELCOME</h1>\r\n                <h2 style={{color: 'darkblue'}}>C</h2><h2 style={{color: 'blue'}}>R</h2><h2 style={{color: 'aqua'}}>M</h2>\r\n                <p>Customer-relationship management is an approach to manage a\r\n                    company's interaction with current and potential customers</p>\r\n                    <img alt='landing' style={{height: '300px', width: '300px'}} src='https://media.istockphoto.com/vectors/businesswoman-riding-success-arrow-graph-vector-id956943780?k=6&m=956943780&s=612x612&w=0&h=TqDj_OCDDBKOw9zyV_pXlBqvc2xB5Zfr4ihcHUoK4H0='/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Clients from './components/clients';\nimport Actions from './components/actions';\nimport Analystics from './components/analystics';\nimport './App.css';\nimport Landing from './components/landing';\n// import Loader from './components/sub_components/update/loader';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <div className='nav'>\n            <Link to='/clients' className='link'>Clients</Link>\n            <Link to='/actions' className='link'>Actions</Link>\n            <Link to='/analystics' className='link'>Analystics</Link>\n          </div>\n          <Route exact path='/' component={Landing}></Route>\n          <Route exact path='/clients' component={Clients}></Route>\n          <Route exact path='/actions' component={Actions}></Route>\n          <Route exact path='/analystics' component={Analystics}></Route>\n          {/* <Route exact path='/load' component={Loader}></Route> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}